# @package _global_
# Changes specified in this config should be interpreted as relative to the _global_ package.
defaults:
  - override /algorithm: cleanppo

env: 'BipedalWalker-v3'

# the parameters have not been optimized for this environment!
algorithm:
  learning_rate: 0.003
  n_steps: 2048
  batch_size: 64
  n_epochs: 10
  gamma: 0.99
  gae_lambda: 0.95
  clip_range: 0.2
  clip_range_vf: null
  normalize_advantage: true
  ent_coef: 0.0
  vf_coef: 0.5
  max_grad_norm: 0.5

render: 'record'

render_freq: 20 # epochs
render_metrics_train: ['train/rollout_rewards_step', 'train/rollout_logprob_step']
render_metrics_test: ['eval/rollout_rewards_step']
render_frames_per_clip: 0 # Number of frames per clip when recording. If set to 0, one episode is recorded.


wandb: 1

early_stop_data_column: 'eval/mean_reward'
early_stop_threshold: 260
n_epochs: 200
eval_after_n_steps: 2000
hyperopt_criterion: 'eval/mean_reward'

# The number of testing rollouts.
n_test_rollouts: 10

# The n last epochs over which to average for determining early stopping condition.
early_stop_last_n: 3

hydra:
  sweeper:
    n_jobs: 9
    study_name: cleanppo_BipedalWalker-opti
    max_trials: 120
    direction: maximize
    max_duration_minutes: 36000
    min_trials_per_param: 2
    max_trials_per_param: 3
    search_space:
      ++algorithm.learning_rate:
        type: float
        low: 0.0001
        high: 0.005
        log: true
      ++algorithm.clip_range:
        type: float
        low: 0.1
        high: 0.3
        step: 0.05
      ++algorithm.n_steps:
        type: int
        low: 512
        high: 4096
        step: 512
      ++algorithm.batch_size:
        type: int
        low: 32
        high: 1024
        step: 32
      ++algorithm.vf_coef:
        type: float
        low: 0.2
        high: 0.8
        step: 0.1
      ++algorithm.max_grad_norm:
        type: float
        low: 0.2
        high: 0.8
        step: 0.1
      ++algorithm.gamma:
        type: float
        low: 0.9
        high: 0.99
        step: 0.01
      ++algorithm.gae_lambda:
        type: float
        low: 0.9
        high: 0.99
        step: 0.01
      ++algorithm.n_epochs:
        type: int
        low: 2
        high: 20
        step: 2

